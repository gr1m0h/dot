name: Test macOS Setup Scripts

on:
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Test mode to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - dotfiles
          - homebrew
          - macos
          - docker
          - install

jobs:
  test-macos:
    name: Test on macOS
    runs-on: macos-latest
    timeout-minutes: 60
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up environment
        run: |
          echo "DOTPATH=$(pwd)" >> $GITHUB_ENV
          echo "HOME_BACKUP=$HOME" >> $GITHUB_ENV
          
      - name: Show system information
        run: |
          echo "=== System Information ==="
          uname -a
          sw_vers
          echo "Architecture: $(uname -m)"
          echo "=== Environment ==="
          echo "PWD: $(pwd)"
          echo "HOME: $HOME"
          echo "DOTPATH: $DOTPATH"
          
      - name: Test install.sh script
        if: ${{ github.event.inputs.test_mode == 'install' || github.event.inputs.test_mode == 'all' }}
        run: |
          echo "=== Testing install.sh script ==="
          chmod +x script/install.sh
          
          # Test with different options
          echo "Testing install.sh with 'dotfiles' option..."
          ./script/install.sh dotfiles
          
          echo "Testing install.sh help..."
          ./script/install.sh --help || true
          
      - name: Test setup script - dotfiles only
        if: ${{ github.event.inputs.test_mode == 'dotfiles' || github.event.inputs.test_mode == 'all' }}
        run: |
          echo "=== Testing setup script with dotfiles ==="
          chmod +x script/setup
          ./script/setup dotfiles
          
          # Verify some dotfiles were created
          echo "=== Verifying dotfiles installation ==="
          ls -la $HOME/.editorconfig || echo "No .editorconfig found"
          ls -la $HOME/.zshrc || echo "No .zshrc found"
          ls -la $HOME/.config/zsh/ || echo "No zsh config dir found"
          
      - name: Test setup script - homebrew
        if: ${{ github.event.inputs.test_mode == 'homebrew' || github.event.inputs.test_mode == 'all' }}
        run: |
          echo "=== Testing setup script with homebrew ==="
          chmod +x script/setup
          
          # Check if Homebrew is already installed
          if command -v brew >/dev/null 2>&1; then
            echo "Homebrew already installed at: $(which brew)"
            brew --version
          else
            echo "Homebrew not installed, testing installation..."
          fi
          
          # Run homebrew setup
          ./script/setup homebrew
          
          # Verify Homebrew installation
          if command -v brew >/dev/null 2>&1; then
            echo "Homebrew successfully available"
            brew --version
            echo "Installed packages:"
            brew list --formula || true
          else
            echo "ERROR: Homebrew not found after installation"
            exit 1
          fi
          
      - name: Test setup script - macOS settings
        if: ${{ github.event.inputs.test_mode == 'macos' || github.event.inputs.test_mode == 'all' }}
        run: |
          echo "=== Testing setup script with macOS settings ==="
          chmod +x script/setup
          ./script/setup macos
          
          # Verify some settings were applied
          echo "=== Verifying macOS settings ==="
          defaults read NSGlobalDomain AppleShowAllExtensions || echo "Setting not found"
          defaults read com.apple.dock autohide || echo "Setting not found"
          
      - name: Test setup script - docker
        if: ${{ github.event.inputs.test_mode == 'docker' || github.event.inputs.test_mode == 'all' }}
        run: |
          echo "=== Testing setup script with docker ==="
          chmod +x script/setup
          
          # Install docker and colima first if not present
          if ! command -v docker >/dev/null 2>&1; then
            echo "Installing docker via homebrew..."
            if command -v brew >/dev/null 2>&1; then
              brew install docker colima
            else
              echo "Homebrew not available, skipping docker installation"
              exit 0
            fi
          fi
          
          ./script/setup docker || echo "Docker setup completed with warnings (expected in CI)"
          
      - name: Test all setup options
        if: ${{ github.event.inputs.test_mode == 'all' }}
        run: |
          echo "=== Testing setup script with all options ==="
          chmod +x script/setup
          ./script/setup all || echo "Setup completed with some warnings (expected in CI)"
          
      - name: Validate script syntax
        run: |
          echo "=== Validating script syntax ==="
          sh -n script/install.sh
          sh -n script/setup
          echo "All scripts have valid syntax"
          
      - name: Test error handling
        run: |
          echo "=== Testing error handling ==="
          
          # Test with invalid option
          ./script/setup invalid-option || echo "Expected failure for invalid option"
          ./script/install.sh invalid-option || echo "Expected failure for invalid option"
          
          echo "Error handling tests completed"
          
      - name: Clean up test artifacts
        if: always()
        run: |
          echo "=== Cleaning up test artifacts ==="
          # Remove any test files created during the run
          rm -rf /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress || true
          echo "Cleanup completed"
          
      - name: Summary
        if: always()
        run: |
          echo "=== Test Summary ==="
          echo "Test mode: ${{ github.event.inputs.test_mode }}"
          echo "Runner OS: $(uname -s)"
          echo "Runner Architecture: $(uname -m)"
          echo "Test completed at: $(date)"