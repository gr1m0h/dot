#!/bin/bash
# This script builds and installs the WezTerm-Nvim AppleScript application
# hash: {{ include "dot_local/share/chezmoi-scripts/WezTerm-Nvim.applescript.tmpl" | sha256sum }}

set -e

# Skip in CI environment or non-macOS systems
if [ -n "${CI:-}" ] || [ -n "${GITHUB_ACTIONS:-}" ] || [ "$(uname)" != "Darwin" ]; then
    echo "Skipping WezTerm-Nvim.app setup (CI environment or non-macOS)"
    exit 0
fi

echo "🚀 Setting up WezTerm-Nvim.app..."

# Create temp directory for building
TEMP_DIR=$(mktemp -d)
trap "rm -rf $TEMP_DIR" EXIT

# Generate AppleScript from template
APPLESCRIPT_TEMPLATE="${HOME}/.local/share/chezmoi-scripts/WezTerm-Nvim.applescript.tmpl"
APPLESCRIPT_SOURCE="${HOME}/.local/share/chezmoi/home/dot_local/share/chezmoi-scripts/WezTerm-Nvim.applescript.tmpl"

# Activate mise environment to ensure tools are in PATH
if command -v mise &>/dev/null; then
    eval "$(mise activate bash)"
fi

# Detect actual paths of wezterm and nvim
WEZTERM_PATH=$(command -v wezterm || echo "/opt/homebrew/bin/wezterm")
NVIM_PATH=$(command -v nvim || echo "/opt/homebrew/bin/nvim")

echo "📍 Detected paths:"
echo "  WezTerm: $WEZTERM_PATH"
echo "  Nvim: $NVIM_PATH"

# Create a temporary substituted template without chezmoi template variables
if [ -f "$APPLESCRIPT_TEMPLATE" ]; then
    echo "📝 Using applied template from $APPLESCRIPT_TEMPLATE"
    TEMPLATE_FILE="$APPLESCRIPT_TEMPLATE"
elif [ -f "$APPLESCRIPT_SOURCE" ]; then
    echo "📝 Using source template from $APPLESCRIPT_SOURCE (fallback)"
    TEMPLATE_FILE="$APPLESCRIPT_SOURCE"
else
    echo "❌ AppleScript template not found in either location:"
    echo "  - $APPLESCRIPT_TEMPLATE"
    echo "  - $APPLESCRIPT_SOURCE"
    exit 1
fi

# Simple string replacement instead of chezmoi template processing
sed -e "s|{{ .wezterm_path | default \"/opt/homebrew/bin/wezterm\" }}|$WEZTERM_PATH|g" \
    -e "s|{{ .nvim_path | default \"/opt/homebrew/bin/nvim\" }}|$NVIM_PATH|g" \
    "$TEMPLATE_FILE" > "$TEMP_DIR/WezTerm-Nvim.applescript"

# Build the application
echo "📦 Building WezTerm-Nvim.app..."
osacompile -o "$TEMP_DIR/WezTerm-Nvim.app" "$TEMP_DIR/WezTerm-Nvim.applescript"

# Create Applications directory if it doesn't exist
mkdir -p "${HOME}/Applications"

# Remove old version if exists
if [ -d "${HOME}/Applications/WezTerm-Nvim.app" ]; then
    echo "🗑️  Removing old version..."
    rm -rf "${HOME}/Applications/WezTerm-Nvim.app"
fi

# Move app to Applications
echo "📂 Installing to ~/Applications..."
mv "$TEMP_DIR/WezTerm-Nvim.app" "${HOME}/Applications/"

# Configure file associations using PlistBuddy
echo "⚙️  Configuring file associations..."
APP_PATH="${HOME}/Applications/WezTerm-Nvim.app"
PLIST_PATH="$APP_PATH/Contents/Info.plist"

# Add CFBundleDocumentTypes if it doesn't exist
/usr/libexec/PlistBuddy -c "Delete :CFBundleDocumentTypes" "$PLIST_PATH" 2>/dev/null || true
/usr/libexec/PlistBuddy -c "Add :CFBundleDocumentTypes array" "$PLIST_PATH"

# Define file extensions to associate
EXTENSIONS=(
    # Text files
    "txt" "md" "markdown" "rst"
    # Programming languages
    "lua" "vim" "vimrc"
    "js" "jsx" "ts" "tsx" "mjs" "cjs"
    "py" "pyw" "pyi" "pyc"
    "rb" "rake" "ru" "gemspec"
    "go" "mod" "sum"
    "rs" "toml" 
    "c" "h" "cpp" "hpp" "cc" "cxx"
    "java" "class" "jar"
    "sh" "bash" "zsh" "fish"
    # Config files
    "yml" "yaml" "json" "jsonc" "json5"
    "xml" "plist" "ini" "cfg" "conf"
    "env" "gitignore" "gitconfig"
    "dockerfile" "dockerignore"
    # Web files
    "html" "htm" "css" "scss" "sass" "less"
    "php" "asp" "jsp"
    # Other
    "sql" "graphql" "proto"
    {{- if hasKey . "extra_extensions" }}
    {{- range .extra_extensions }}
    {{ . | quote }}
    {{- end }}
    {{- end }}
)

# Add document type
/usr/libexec/PlistBuddy -c "Add :CFBundleDocumentTypes:0 dict" "$PLIST_PATH"
/usr/libexec/PlistBuddy -c "Add :CFBundleDocumentTypes:0:CFBundleTypeExtensions array" "$PLIST_PATH"

# Add all extensions
for i in "${!EXTENSIONS[@]}"; do
    ext="${EXTENSIONS[$i]}"
    /usr/libexec/PlistBuddy -c "Add :CFBundleDocumentTypes:0:CFBundleTypeExtensions:$i string '$ext'" "$PLIST_PATH"
done

# Set document type properties
/usr/libexec/PlistBuddy -c "Add :CFBundleDocumentTypes:0:CFBundleTypeName string 'Text Files'" "$PLIST_PATH"
/usr/libexec/PlistBuddy -c "Add :CFBundleDocumentTypes:0:CFBundleTypeRole string 'Editor'" "$PLIST_PATH"
/usr/libexec/PlistBuddy -c "Add :CFBundleDocumentTypes:0:CFBundleTypeIconFile string 'AppIcon'" "$PLIST_PATH"

# Add bundle identifier
/usr/libexec/PlistBuddy -c "Add :CFBundleIdentifier string 'com.local.wezterm-nvim'" "$PLIST_PATH" 2>/dev/null || \
/usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier 'com.local.wezterm-nvim'" "$PLIST_PATH"

# Add bundle name
/usr/libexec/PlistBuddy -c "Add :CFBundleName string 'WezTerm-Nvim'" "$PLIST_PATH" 2>/dev/null || \
/usr/libexec/PlistBuddy -c "Set :CFBundleName 'WezTerm-Nvim'" "$PLIST_PATH"

# Update LaunchServices database
echo "🔄 Updating LaunchServices database..."
/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -f "${HOME}/Applications/WezTerm-Nvim.app"

echo "✅ WezTerm-Nvim.app setup complete!"
echo ""
echo "📝 Usage:"
echo "  1. Right-click any text file in Finder"
echo "  2. Select 'Open With' > 'WezTerm-Nvim'"
echo "  3. Click 'Change All...' to set as default for that file type"
echo ""
echo "💡 Tip: You can also drag files onto the app icon to open them"